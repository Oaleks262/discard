// Internationalization (i18n) Module

const translations = {
  uk: {
    // Landing Page
    heroTitle: "–í—Å—ñ –∫–∞—Ä—Ç–∏ –ª–æ—è–ª—å–Ω–æ—Å—Ç—ñ –≤ –æ–¥–Ω–æ–º—É –º—ñ—Å—Ü—ñ",
    heroSubtitle: "–°–∫–∞–Ω—É–π, –∑–±–µ—Ä—ñ–≥–∞–π —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–∞—Ä—Ç–∫–∏ –º–∞–≥–∞–∑–∏–Ω—ñ–≤ —É –∑—Ä—É—á–Ω–æ–º—É PWA –¥–æ–¥–∞—Ç–∫—É",
    features: {
      scan: "–°–∫–∞–Ω—É–≤–∞–Ω–Ω—è –∫–∞–º–µ—Ä–æ—é",
      scanDescription: "–õ–µ–≥–∫–æ –¥–æ–¥–∞–≤–∞–π—Ç–µ –Ω–æ–≤—ñ –∫–∞—Ä—Ç–∏ –ø—Ä–æ—Å—Ç–∏–º —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è–º —à—Ç—Ä–∏—Ö-–∫–æ–¥—É –∞–±–æ QR-–∫–æ–¥—É",
      store: "–ë–µ–∑–ø–µ—á–Ω–µ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è",
      storeDescription: "–í–∞—à—ñ –∫–∞—Ä—Ç–∏ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –≤ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ–º—É –≤–∏–≥–ª—è–¥—ñ –∑ –¥–æ—Å—Ç—É–ø–æ–º –ª–∏—à–µ –¥–ª—è –≤–∞—Å",
      access: "–®–≤–∏–¥–∫–∏–π –¥–æ—Å—Ç—É–ø",
      accessDescription: "–ú–∏—Ç—Ç—î–≤–∏–π –¥–æ—Å—Ç—É–ø –¥–æ –≤—Å—ñ—Ö –≤–∞—à–∏—Ö –∫–∞—Ä—Ç –Ω–∞–≤—ñ—Ç—å –æ—Ñ–ª–∞–π–Ω –∑–∞–≤–¥—è–∫–∏ PWA —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó"
    },
    cta: "–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ",
    screenshots: {
      title: "–ü—Ä–æ—Å—Ç–∏–π —É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å",
      allCards: "–í—Å—ñ –∫–∞—Ä—Ç–∏ –≤ –æ–¥–Ω–æ–º—É –º—ñ—Å—Ü—ñ",
      easyScanning: "–õ–µ–≥–∫–µ —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è",
      personalization: "–ü–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–∞—Ü—ñ—è"
    },
    mockupCards: {
      tabs: {
        cards: "üì± –ö–∞—Ä—Ç–∏",
        add: "‚ûï –î–æ–¥–∞—Ç–∏", 
        settings: "‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"
      },
      stores: {
        atb: "–ê–¢–ë",
        silpo: "–°—ñ–ª—å–ø–æ",
        eva: "EVA"
      },
      scanner: {
        instruction: "–ù–∞–≤–µ–¥—ñ—Ç—å –∫–∞–º–µ—Ä—É –Ω–∞ —à—Ç—Ä–∏—Ö-–∫–æ–¥ –∞–±–æ QR-–∫–æ–¥"
      },
      settings: {
        darkTheme: "üåô –¢–µ–º–Ω–∞ —Ç–µ–º–∞",
        language: "üåç –ú–æ–≤–∞: –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞"
      }
    },
    installation: {
      title: "–Ø–∫ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –¥–æ–¥–∞—Ç–æ–∫ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω",
      android: {
        step1: {
          title: "–í—ñ–¥–∫—Ä–∏–π—Ç–µ –¥–æ–¥–∞—Ç–æ–∫ —É –±—Ä–∞—É–∑–µ—Ä—ñ",
          desc: "–ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ —Å–∞–π—Ç —á–µ—Ä–µ–∑ Chrome –∞–±–æ –±—É–¥—å-—è–∫–∏–π —ñ–Ω—à–∏–π –±—Ä–∞—É–∑–µ—Ä"
        },
        step2: {
          title: "–ó–Ω–∞–π–¥—ñ—Ç—å –º–µ–Ω—é –±—Ä–∞—É–∑–µ—Ä–∞",
          desc: "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ —Ç—Ä–∏ –∫—Ä–∞–ø–∫–∏ (<img src='/icons/share-android.png' alt='–º–µ–Ω—é' style='display:inline; width:16px; height:16px; vertical-align:middle;'>) —É –≤–µ—Ä—Ö–Ω—å–æ–º—É –ø—Ä–∞–≤–æ–º—É –∫—É—Ç—ñ –±—Ä–∞—É–∑–µ—Ä–∞"
        },
        step3: {
          title: "–í–∏–±–µ—Ä—ñ—Ç—å \"–î–æ–¥–∞—Ç–∏ –Ω–∞ –≥–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω\"",
          desc: "–ê–±–æ \"Install app\" / \"–í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –¥–æ–¥–∞—Ç–æ–∫\" –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –±—Ä–∞—É–∑–µ—Ä–∞"
        },
        step4: {
          title: "–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è",
          desc: "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å \"–î–æ–¥–∞—Ç–∏\" —ñ –¥–æ–¥–∞—Ç–æ–∫ –∑'—è–≤–∏—Ç—å—Å—è –Ω–∞ –≥–æ–ª–æ–≤–Ω–æ–º—É –µ–∫—Ä–∞–Ω—ñ"
        }
      },
      ios: {
        step1: {
          title: "–í—ñ–¥–∫—Ä–∏–π—Ç–µ Safari",
          desc: "–í–∞–∂–ª–∏–≤–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Å–∞–º–µ Safari –±—Ä–∞—É–∑–µ—Ä –Ω–∞ iOS –ø—Ä–∏—Å—Ç—Ä–æ—è—Ö"
        },
        step2: {
          title: "–ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ —Å–∞–π—Ç",
          desc: "–í–≤–µ–¥—ñ—Ç—å –∞–¥—Ä–µ—Å—É —Å–∞–π—Ç—É –≤ –∞–¥—Ä–µ—Å–Ω–∏–π —Ä—è–¥–æ–∫ Safari"
        },
        step3: {
          title: "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É \"–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è\"",
          desc: "–ó–Ω–∞–π–¥—ñ—Ç—å –∑–Ω–∞—á–æ–∫ –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è (<img src='/icons/share-apple.png' alt='–ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è' style='display:inline; width:16px; height:16px; vertical-align:middle;'>) –≤–Ω–∏–∑—É –µ–∫—Ä–∞–Ω—É Safari"
        },
        step4: {
          title: "–í–∏–±–µ—Ä—ñ—Ç—å \"–ù–∞ –≥–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω\"",
          desc: "–ü—Ä–æ–∫—Ä—É—Ç—ñ—Ç—å –≤–Ω–∏–∑ —ñ –∑–Ω–∞–π–¥—ñ—Ç—å –æ–ø—Ü—ñ—é \"–ù–∞ –≥–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω\" –∞–±–æ \"Add to Home Screen\""
        },
        step5: {
          title: "–î–æ–¥–∞–π—Ç–µ –¥–æ–¥–∞—Ç–æ–∫",
          desc: "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å \"–î–æ–¥–∞—Ç–∏\" —ñ –ø—ñ–∫—Ç–æ–≥—Ä–∞–º–∞ –∑'—è–≤–∏—Ç—å—Å—è –Ω–∞ –¥–æ–º–∞—à–Ω—å–æ–º—É –µ–∫—Ä–∞–Ω—ñ"
        }
      },
      note: {
        title: "–ß–æ–º—É —Ü–µ –ø—Ä–∞—Ü—é—î –±–µ–∑ App Store/Play market?",
        desc: "disCard - —Ü–µ PWA (Progressive Web App), —Å—É—á–∞—Å–Ω–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—è, —â–æ –¥–æ–∑–≤–æ–ª—è—î –≤–µ–±-–¥–æ–¥–∞—Ç–∫–∞–º –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ —è–∫ –Ω–∞—Ç–∏–≤–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏ –∑ –æ—Ñ–ª–∞–π–Ω –¥–æ—Å—Ç—É–ø–æ–º —ñ push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è–º–∏."
      }
    },
    footer: {
      description: "–°—É—á–∞—Å–Ω–∏–π –¥–æ–¥–∞—Ç–æ–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–∞—Ä—Ç–∞–º–∏ –ª–æ—è–ª—å–Ω–æ—Å—Ç—ñ",
      rights: "–í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω—ñ.",
      features: {
        title: "–û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ",
        pwa: "PWA –¥–æ–¥–∞—Ç–æ–∫",
        offline: "–†–æ–±–æ—Ç–∞ –æ—Ñ–ª–∞–π–Ω",
        secure: "–ë–µ–∑–ø–µ—á–Ω–µ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è",
        free: "–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ"
      },
      support: {
        title: "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞",
        install: "–Ø–∫ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏",
        features: "–ú–æ–∂–ª–∏–≤–æ—Å—Ç—ñ",
        guide: "–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è"
      }
    },
    
    // Key Features Section
    keyFeatures: {
      title: "–ü–µ—Ä–µ–≤–∞–≥–∏ disCard",
      pwa: {
        title: "PWA –¥–æ–¥–∞—Ç–æ–∫",
        description: "–ü—Ä–æ–≥—Ä–µ—Å–∏–≤–Ω–∏–π –≤–µ–±-–¥–æ–¥–∞—Ç–æ–∫ —â–æ –ø—Ä–∞—Ü—é—î —è–∫ –Ω–∞—Ç–∏–≤–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞. –í—Å—Ç–∞–Ω–æ–≤–ª—é—î—Ç—å—Å—è –ø—Ä—è–º–æ –∑ –±—Ä–∞—É–∑–µ—Ä–∞ –±–µ–∑ –ø–æ—Ç—Ä–µ–±–∏ App Store —á–∏ Google Play. –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ —à–≤–∏–¥–∫–∏–π –∑–∞–ø—É—Å–∫.",
        benefit1: "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞ 10 —Å–µ–∫—É–Ω–¥",
        benefit2: "–ù–µ –∑–∞–π–º–∞—î –±–∞–≥–∞—Ç–æ –º—ñ—Å—Ü—è",
        benefit3: "–ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ —Ñ–æ–Ω—ñ"
      },
      offline: {
        title: "–†–æ–±–æ—Ç–∞ –æ—Ñ–ª–∞–π–Ω",
        description: "–í—Å—ñ –≤–∞—à—ñ –∫–∞—Ä—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –Ω–∞–≤—ñ—Ç—å –±–µ–∑ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-–∑'—î–¥–Ω–∞–Ω–Ω—è. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–∞—Ä—Ç–∫–∏ –ª–æ—è–ª—å–Ω–æ—Å—Ç—ñ –≤ –º–∞–≥–∞–∑–∏–Ω—ñ, –º–µ—Ç—Ä–æ —á–∏ –±—É–¥—å-–¥–µ. –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—Ä–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—ñ.",
        benefit1: "100% –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –∫–∞—Ä—Ç–æ–∫",
        benefit2: "–®–≤–∏–¥–∫–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è",
        benefit3: "–ï–∫–æ–Ω–æ–º—ñ—è —Ç—Ä–∞—Ñ—ñ–∫—É"
      },
      secure: {
        title: "–ë–µ–∑–ø–µ—á–Ω–µ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è",
        description: "–í–∞—à—ñ –¥–∞–Ω—ñ –∑–∞—Ö–∏—â–µ–Ω—ñ —Å—É—á–∞—Å–Ω–∏–º —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è–º —Ç–∞ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –Ω–∞ –≤–∞—à–æ–º—É –ø—Ä–∏—Å—Ç—Ä–æ—ó. –ù—ñ—Ö—Ç–æ –Ω–µ –º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ –≤–∞—à–∏—Ö –∫–∞—Ä—Ç–æ–∫, –∫—Ä—ñ–º –≤–∞—Å. –ü–æ–≤–Ω–∞ –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω—ñ—Å—Ç—å –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–∞.",
        benefit1: "AES-256 —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è",
        benefit2: "–õ–æ–∫–∞–ª—å–Ω–µ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è",
        benefit3: "–ù—É–ª—å–æ–≤–∏–π –¥–æ—Å—Ç—É–ø —Ç—Ä–µ—Ç—ñ—Ö –æ—Å—ñ–±"
      },
      free: {
        title: "–ü–æ–≤–Ω—ñ—Å—Ç—é –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ",
        description: "–ù—ñ—è–∫–∏—Ö –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏—Ö –ø–ª–∞—Ç–µ–∂—ñ–≤, –ø—ñ–¥–ø–∏—Å–æ–∫ —á–∏ –æ–±–º–µ–∂–µ–Ω—å. –í—Å—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–æ—Å—Ç—É–ø–Ω—ñ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ –Ω–∞–∑–∞–≤–∂–¥–∏. –ü—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è —Ä–µ–∫–ª–∞–º–æ—é, —â–æ –Ω–µ –∑–∞–≤–∞–∂–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—é –¥–æ–¥–∞—Ç–∫–æ–º.",
        benefit1: "–ë–µ–∑ –ø—ñ–¥–ø–∏—Å–æ–∫",
        benefit2: "–í—Å—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–æ—Å—Ç—É–ø–Ω—ñ",
        benefit3: "–ú—ñ–Ω—ñ–º—É–º —Ä–µ–∫–ª–∞–º–∏"
      }
    },
    
    // App Navigation
    tabs: {
      cards: "–ö–∞—Ä—Ç–∏",
      add: "–î–æ–¥–∞—Ç–∏",
      profile: "–ü—Ä–æ—Ñ—ñ–ª—å",
      settings: "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"
    },
    
    // Authentication
    auth: {
      login: "–£–≤—ñ–π—Ç–∏",
      register: "–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è",
      email: "Email",
      password: "–ü–∞—Ä–æ–ª—å",
      name: "–Ü–º'—è",
      loginTitle: "–í—Ö—ñ–¥ –¥–æ –∞–∫–∞—É–Ω—Ç—É",
      registerTitle: "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–∫–∞—É–Ω—Ç—É",
      noAccount: "–ù–µ–º–∞—î –∞–∫–∞—É–Ω—Ç—É?",
      hasAccount: "–í–∂–µ —î –∞–∫–∞—É–Ω—Ç?",
      forgotPassword: "–ó–∞–±—É–≤ –ø–∞—Ä–æ–ª—å?",
      resetPassword: "–í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é",
      resetPasswordText: "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É —ñ –º–∏ –∑–≥–µ–Ω–µ—Ä—É—î–º–æ –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å —Ç–∞ –Ω–∞–¥—ñ—à–ª–µ–º–æ –π–æ–≥–æ –≤–∞–º.",
      generatePassword: "–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø–∞—Ä–æ–ª—å",
      generatingPassword: "–ì–µ–Ω–µ—Ä—É—î–º–æ –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å..."
    },
    
    // Common
    common: {
      cancel: "–°–∫–∞—Å—É–≤–∞—Ç–∏",
      ok: "OK",
      save: "–ó–±–µ—Ä–µ–≥—Ç–∏"
    },
    
    // Two-Factor Authentication
    twofa: {
      title: "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤—Ö–æ–¥—É",
      subtitle: "–í–≤–µ–¥—ñ—Ç—å –∫–æ–¥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è, –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–∞ –≤–∞—à—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É",
      sentTo: "–ù–∞–¥—ñ—Å–ª–∞–Ω–æ –Ω–∞:",
      verify: "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏",
      resend: "–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∫–æ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ",
      back: "–ù–∞–∑–∞–¥ –¥–æ –≤—Ö–æ–¥—É",
      resendIn: "–ü–æ–≤—Ç–æ—Ä–Ω–µ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–µ —á–µ—Ä–µ–∑:",
      seconds: "—Å–µ–∫—É–Ω–¥",
      invalidCode: "–ù–µ–≤—ñ—Ä–Ω–∏–π –∫–æ–¥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è",
      codeExpired: "–ö–æ–¥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –º–∏–Ω—É–≤",
      verificationSuccess: "–í—Ö—ñ–¥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ",
      resendSuccess: "–ö–æ–¥ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ",
      enterAllDigits: "–í–≤–µ–¥—ñ—Ç—å —É—Å—ñ 5 —Ü–∏—Ñ—Ä –∫–æ–¥—É"
    },
    
    // Security
    security: {
      title: "–ë–µ–∑–ø–µ–∫–∞",
      twoFactor: "–î–≤–æ—Ñ–∞–∫—Ç–æ—Ä–Ω–∞ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è",
      twoFactorDescription: "–î–æ–¥–∞—Ç–∫–æ–≤–∏–π —Ä—ñ–≤–µ–Ω—å –±–µ–∑–ø–µ–∫–∏ –¥–ª—è –≤–∞—à–æ–≥–æ –∞–∫–∞—É–Ω—Ç—É",
      twoFactorEnabled: "2FA —É–≤—ñ–º–∫–Ω–µ–Ω–æ",
      twoFactorDisabled: "2FA –≤–∏–º–∫–Ω–µ–Ω–æ",
      enableTwoFactor: "–£–≤—ñ–º–∫–Ω—É—Ç–∏ 2FA",
      disableTwoFactor: "–í–∏–º–∫–Ω—É—Ç–∏ 2FA"
    },
    
    // Profile
    profile: {
      userId: "ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
      changePassword: "–ó–º—ñ–Ω–∞ –ø–∞—Ä–æ–ª—è",
      currentPassword: "–ü–æ—Ç–æ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å",
      newPassword: "–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å",
      confirmPassword: "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –ø–∞—Ä–æ–ª—å",
      userInfo: "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
      statistics: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
      cardsCount: "–ó–±–µ—Ä–µ–∂–µ–Ω–æ –∫–∞—Ä—Ç",
      joinDate: "–î–∞—Ç–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó",
      logout: "–í–∏–π—Ç–∏",
      changePasswordBtn: "–ó–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–æ–ª—å",
      noDateAvailable: "–î–∞—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    },
    
    // Settings
    settings: {
      theme: "–¢–µ–º–∞",
      light: "–°–≤—ñ—Ç–ª–∞",
      dark: "–¢–µ–º–Ω–∞",
      language: "–ú–æ–≤–∞",
      appearance: "–í–∏–≥–ª—è–¥ –¥–æ–¥–∞—Ç–∫—É",
      interfaceLanguage: "–ú–æ–≤–∞ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É",
      themeDescription: "–û–±–µ—Ä—ñ—Ç—å —Å–≤—ñ—Ç–ª—É –∞–±–æ —Ç–µ–º–Ω—É —Ç–µ–º—É",
      languageDescription: "–û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É –¥–æ–¥–∞—Ç–∫—É"
    },
    
    // Cards
    cards: {
      searchPlaceholder: "–ü–æ—à—É–∫ –∫–∞—Ä—Ç...",
      noCards: "–£ –≤–∞—Å –ø–æ–∫–∏ –Ω–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –∫–∞—Ä—Ç",
      noCardsSubtitle: "–î–æ–¥–∞–π—Ç–µ –≤–∞—à—É –ø–µ—Ä—à—É –∫–∞—Ä—Ç–∫—É –ª–æ—è–ª—å–Ω–æ—Å—Ç—ñ",
      addCard: "–î–æ–¥–∞—Ç–∏ –∫–∞—Ä—Ç–∫—É",
      cardName: "–ù–∞–∑–≤–∞ –∫–∞—Ä—Ç–∫–∏",
      cardNamePlaceholder: "–ù–∞–ø—Ä–∏–∫–ª–∞–¥: –ê–¢–ë",
      cardColor: "–ö–æ–ª—ñ—Ä –∫–∞—Ä—Ç–∫–∏",
      cardCode: "–ö–æ–¥ –∫–∞—Ä—Ç–∫–∏",
      codeType: "–¢–∏–ø –∫–æ–¥—É",
      barcode: "–®—Ç—Ä–∏—Ö-–∫–æ–¥",
      qrcode: "QR-–∫–æ–¥",
      preview: "–ü—Ä–µ–≤—å—é –∫–æ–¥—É",
      saveCard: "–ó–±–µ—Ä–µ–≥—Ç–∏ –∫–∞—Ä—Ç–∫—É",
      cancel: "–°–∫–∞—Å—É–≤–∞—Ç–∏",
      editCard: "–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –∫–∞—Ä—Ç–∫—É",
      deleteCard: "–í–∏–¥–∞–ª–∏—Ç–∏ –∫–∞—Ä—Ç–∫—É",
      copyCode: "–ö–æ–ø—ñ—é–≤–∞—Ç–∏ –∫–æ–¥",
      scanCode: "–°–∫–∞–Ω—É–≤–∞—Ç–∏ –∫–æ–¥",
      manualEntry: "–í–≤–µ–¥—ñ—Ç—å –∫–æ–¥ –∞–±–æ —Å–∫–∞–Ω—É–π—Ç–µ",
      scanInstructions: "–ù–∞–≤–µ–¥—ñ—Ç—å –∫–∞–º–µ—Ä—É –Ω–∞ —à—Ç—Ä–∏—Ö-–∫–æ–¥ –∞–±–æ QR-–∫–æ–¥ –¥–ª—è —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è",
      created: "–°—Ç–≤–æ—Ä–µ–Ω–æ",
      codeWillAppear: "–ö–æ–¥ –∑'—è–≤–∏—Ç—å—Å—è —Ç—É—Ç"
    },
    
    // Scanner
    scanner: {
      title: "–°–∫–∞–Ω—É–≤–∞–Ω–Ω—è –∫–æ–¥—É",
      instructions: "–ù–∞–≤–µ–¥—ñ—Ç—å –∫–∞–º–µ—Ä—É –Ω–∞ —à—Ç—Ä–∏—Ö-–∫–æ–¥ –∞–±–æ QR-–∫–æ–¥ –¥–ª—è —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è",
      permissionDenied: "–î–æ—Å—Ç—É–ø –¥–æ –∫–∞–º–µ—Ä–∏ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ",
      notFound: "–ö–∞–º–µ—Ä–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞",
      scanning: "–°–∫–∞–Ω—É–≤–∞–Ω–Ω—è...",
      success: "–ö–æ–¥ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥—Å–∫–∞–Ω–æ–≤–∞–Ω–∏–π!",
      error: "–ü–æ–º–∏–ª–∫–∞ —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è",
      barcodeUnavailable: "–®—Ç—Ä–∏—Ö-–∫–æ–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π"
    },
    
    // Messages
    messages: {
      loading: "–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...",
      saving: "–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è...",
      saved: "–ó–±–µ—Ä–µ–∂–µ–Ω–æ!",
      error: "–ü–æ–º–∏–ª–∫–∞",
      success: "–£—Å–ø—ñ—Ö",
      pullToRefresh: "–ü–æ—Ç—è–≥–Ω—ñ—Ç—å –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è",
      confirm: "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏",
      cancel: "–°–∫–∞—Å—É–≤–∞—Ç–∏",
      delete: "–í–∏–¥–∞–ª–∏—Ç–∏",
      edit: "–†–µ–¥–∞–≥—É–≤–∞—Ç–∏",
      close: "–ó–∞–∫—Ä–∏—Ç–∏",
      copy: "–ö–æ–ø—ñ—é–≤–∞—Ç–∏",
      copied: "–°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ!",
      copyFailed: "–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è",
      loginSuccess: "–£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥",
      registerSuccess: "–ê–∫–∞—É–Ω—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ! –£–≤—ñ–π–¥—ñ—Ç—å —É —Å–≤—ñ–π –∞–∫–∞—É–Ω—Ç",
      logoutSuccess: "–í–∏ –≤–∏–π—à–ª–∏ –∑ –∞–∫–∞—É–Ω—Ç—É",
      passwordChanged: "–ü–∞—Ä–æ–ª—å –∑–º—ñ–Ω–µ–Ω–æ",
      profileUpdated: "–ü—Ä–æ—Ñ—ñ–ª—å –æ–Ω–æ–≤–ª–µ–Ω–æ",
      cardAdded: "–ö–∞—Ä—Ç–∫—É –¥–æ–¥–∞–Ω–æ",
      cardUpdated: "–ö–∞—Ä—Ç–∫—É –æ–Ω–æ–≤–ª–µ–Ω–æ",
      cardDeleted: "–ö–∞—Ä—Ç–∫—É –≤–∏–¥–∞–ª–µ–Ω–æ",
      invalidCredentials: "–ù–µ–≤—ñ—Ä–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –≤—Ö–æ–¥—É",
      emailExists: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ —Ç–∞–∫–∏–º email –≤–∂–µ —ñ—Å–Ω—É—î",
      passwordTooShort: "–ü–∞—Ä–æ–ª—å –ø–æ–≤–∏–Ω–µ–Ω –º—ñ—Å—Ç–∏—Ç–∏ –º—ñ–Ω—ñ–º—É–º 8 —Å–∏–º–≤–æ–ª—ñ–≤",
      invalidName: "–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ —ñ–º'—è. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ç—ñ–ª—å–∫–∏ –ª—ñ—Ç–µ—Ä–∏, –∞–ø–æ—Å—Ç—Ä–æ—Ñ, –¥–µ—Ñ—ñ—Å —Ç–∞ –ø—Ä–æ–±—ñ–ª–∏ (2-50 —Å–∏–º–≤–æ–ª—ñ–≤)",
      passwordsDontMatch: "–ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å",
      fillAllFields: "–ó–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –ø–æ–ª—è",
      networkError: "–ü–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ",
      serverError: "–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
      cameraNotSupported: "–ö–∞–º–µ—Ä–∞ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è",
      invalidCode: "–ù–µ–≤—ñ—Ä–Ω–∏–π –∫–æ–¥",
      confirmDelete: "–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü—é –∫–∞—Ä—Ç–∫—É?",
      offlineMode: "–†–µ–∂–∏–º –æ—Ñ–ª–∞–π–Ω"
    },
    
    // Time formats
    time: {
      now: "–∑–∞—Ä–∞–∑",
      minuteAgo: "—Ö–≤–∏–ª–∏–Ω—É —Ç–æ–º—É",
      minutesAgo: "—Ö–≤–∏–ª–∏–Ω —Ç–æ–º—É",
      hourAgo: "–≥–æ–¥–∏–Ω—É —Ç–æ–º—É",
      hoursAgo: "–≥–æ–¥–∏–Ω —Ç–æ–º—É",
      dayAgo: "–¥–µ–Ω—å —Ç–æ–º—É",
      daysAgo: "–¥–Ω—ñ–≤ —Ç–æ–º—É",
      monthAgo: "–º—ñ—Å—è—Ü—å —Ç–æ–º—É",
      monthsAgo: "–º—ñ—Å—è—Ü—ñ–≤ —Ç–æ–º—É",
      yearAgo: "—Ä—ñ–∫ —Ç–æ–º—É",
      yearsAgo: "—Ä–æ–∫—ñ–≤ —Ç–æ–º—É"
    }
  },
  
  en: {
    // Landing Page
    heroTitle: "All loyalty cards in one place",
    heroSubtitle: "Scan, store and use your store cards in a convenient PWA app",
    features: {
      scan: "Camera scanning",
      scanDescription: "Easily add new cards by simply scanning barcodes or QR codes",
      store: "Secure storage",
      storeDescription: "Your cards are stored encrypted with access only for you",
      access: "Quick access",
      accessDescription: "Instant access to all your cards even offline thanks to PWA technology"
    },
    cta: "Try for free",
    screenshots: {
      title: "Easy to use interface",
      allCards: "All cards in one place",
      easyScanning: "Easy scanning",
      personalization: "Personalization"
    },
    mockupCards: {
      tabs: {
        cards: "üì± Cards",
        add: "‚ûï Add",
        settings: "‚öôÔ∏è Settings"
      },
      stores: {
        atb: "ATB",
        silpo: "Silpo", 
        eva: "EVA"
      },
      scanner: {
        instruction: "Point your camera at barcode or QR code"
      },
      settings: {
        darkTheme: "üåô Dark theme",
        language: "üåç Language: English"
      }
    },
    installation: {
      title: "How to install the app on your phone",
      android: {
        step1: {
          title: "Open the app in browser",
          desc: "Go to the website through Chrome or any other browser"
        },
        step2: {
          title: "Find browser menu",
          desc: "Tap on three dots (<img src='/icons/share-android.png' alt='menu' style='display:inline; width:16px; height:16px; vertical-align:middle;'>) in the top right corner of the browser"
        },
        step3: {
          title: "Select \"Add to Home screen\"",
          desc: "Or \"Install app\" depending on your browser"
        },
        step4: {
          title: "Confirm installation",
          desc: "Tap \"Add\" and the app will appear on your home screen"
        }
      },
      ios: {
        step1: {
          title: "Open Safari",
          desc: "It's important to use Safari browser on iOS devices"
        },
        step2: {
          title: "Go to the website",
          desc: "Enter the website address in Safari's address bar"
        },
        step3: {
          title: "Tap the \"Share\" button",
          desc: "Find the share icon (<img src='/icons/share-apple.png' alt='share' style='display:inline; width:16px; height:16px; vertical-align:middle;'>) at the bottom of Safari screen"
        },
        step4: {
          title: "Select \"Add to Home Screen\"",
          desc: "Scroll down and find the \"Add to Home Screen\" option"
        },
        step5: {
          title: "Add the app",
          desc: "Tap \"Add\" and the icon will appear on your home screen"
        }
      },
      note: {
        title: "Why does it work without App Store?",
        desc: "disCard is a PWA (Progressive Web App), a modern technology that allows web apps to work like native programs with offline access and push notifications."
      }
    },
    footer: {
      description: "Modern app for managing loyalty cards",
      rights: "All rights reserved.",
      features: {
        title: "Features",
        pwa: "PWA App",
        offline: "Works Offline",
        secure: "Secure Storage",
        free: "Free"
      },
      support: {
        title: "Support",
        install: "How to Install",
        features: "Features",
        guide: "Guide"
      }
    },
    
    // Key Features Section
    keyFeatures: {
      title: "disCard Advantages",
      pwa: {
        title: "PWA App",
        description: "Progressive Web Application that works like a native program. Installs directly from the browser without needing App Store or Google Play. Automatic updates and fast startup.",
        benefit1: "10-second installation",
        benefit2: "Doesn't take much space",
        benefit3: "Auto-updates in background"
      },
      offline: {
        title: "Works Offline",
        description: "All your cards are accessible even without internet connection. Use loyalty cards in stores, subway or anywhere. Synchronization happens automatically when connected.",
        benefit1: "100% card availability",
        benefit2: "Fast loading",
        benefit3: "Traffic savings"
      },
      secure: {
        title: "Secure Storage",
        description: "Your data is protected with modern encryption and stored locally on your device. No one has access to your cards except you. Complete privacy guaranteed.",
        benefit1: "AES-256 encryption",
        benefit2: "Local storage",
        benefit3: "Zero third-party access"
      },
      free: {
        title: "Completely Free",
        description: "No hidden fees, subscriptions or restrictions. All features are available for free forever. Supported by ads that don't interfere with app usage.",
        benefit1: "No subscriptions",
        benefit2: "All features available",
        benefit3: "Minimal advertising"
      }
    },
    
    // App Navigation
    tabs: {
      cards: "Cards",
      add: "Add",
      profile: "Profile",
      settings: "Settings"
    },
    
    // Authentication
    auth: {
      login: "Login",
      register: "Register",
      email: "Email",
      password: "Password",
      name: "Name",
      loginTitle: "Sign in to your account",
      registerTitle: "Create your account",
      noAccount: "Don't have an account?",
      hasAccount: "Already have an account?",
      forgotPassword: "Forgot password?",
      resetPassword: "Password Recovery",
      resetPasswordText: "Enter your email address and we will generate a new password and send it to you.",
      generatePassword: "Generate Password",
      generatingPassword: "Generating new password..."
    },
    
    // Common
    common: {
      cancel: "Cancel",
      ok: "OK",
      save: "Save"
    },
    
    // Two-Factor Authentication
    twofa: {
      title: "Verify Sign In",
      subtitle: "Enter the verification code sent to your email address",
      sentTo: "Sent to:",
      verify: "Verify",
      resend: "Resend code",
      back: "Back to sign in",
      resendIn: "Resend available in:",
      seconds: "seconds",
      invalidCode: "Invalid verification code",
      codeExpired: "Verification code expired",
      verificationSuccess: "Sign in verified successfully",
      resendSuccess: "Code sent again",
      enterAllDigits: "Enter all 5 digits of the code"
    },
    
    // Security
    security: {
      title: "Security",
      twoFactor: "Two-Factor Authentication",
      twoFactorDescription: "Extra security layer for your account",
      twoFactorEnabled: "2FA enabled",
      twoFactorDisabled: "2FA disabled",
      enableTwoFactor: "Enable 2FA",
      disableTwoFactor: "Disable 2FA"
    },
    
    // Profile
    profile: {
      userId: "User ID",
      changePassword: "Change password",
      currentPassword: "Current password",
      newPassword: "New password",
      confirmPassword: "Confirm password",
      userInfo: "User information",
      statistics: "Statistics",
      cardsCount: "Saved cards",
      joinDate: "Join date",
      logout: "Logout",
      changePasswordBtn: "Change password",
      noDateAvailable: "No date available"
    },
    
    // Settings
    settings: {
      theme: "Theme",
      light: "Light",
      dark: "Dark",
      language: "Language",
      appearance: "App appearance",
      interfaceLanguage: "Interface language",
      themeDescription: "Choose light or dark theme",
      languageDescription: "Choose app language"
    },
    
    // Cards
    cards: {
      searchPlaceholder: "Search cards...",
      noCards: "You don't have any saved cards yet",
      noCardsSubtitle: "Add your first loyalty card",
      addCard: "Add card",
      cardName: "Card name",
      cardNamePlaceholder: "e.g.: Starbucks",
      cardColor: "Card color",
      cardCode: "Card code",
      codeType: "Code type",
      barcode: "Barcode",
      qrcode: "QR code",
      preview: "Code preview",
      saveCard: "Save card",
      cancel: "Cancel",
      editCard: "Edit card",
      deleteCard: "Delete card",
      copyCode: "Copy code",
      scanCode: "Scan code",
      manualEntry: "Enter code or scan",
      scanInstructions: "Point your camera at barcode or QR code to scan",
      created: "Created",
      codeWillAppear: "Code will appear here"
    },
    
    // Scanner
    scanner: {
      title: "Code scanning",
      instructions: "Point your camera at barcode or QR code to scan",
      permissionDenied: "Camera access denied",
      notFound: "Camera not found",
      scanning: "Scanning...",
      success: "Code scanned successfully!",
      error: "Scanning error",
      barcodeUnavailable: "Barcode unavailable"
    },
    
    // Messages
    messages: {
      loading: "Loading...",
      saving: "Saving...",
      saved: "Saved!",
      error: "Error",
      success: "Success",
      pullToRefresh: "Pull to refresh",
      confirm: "Confirm",
      cancel: "Cancel",
      delete: "Delete",
      edit: "Edit",
      close: "Close",
      copy: "Copy",
      copied: "Copied!",
      copyFailed: "Copy failed",
      loginSuccess: "Login successful",
      registerSuccess: "Account created successfully! Please log in",
      logoutSuccess: "You have been logged out",
      passwordChanged: "Password changed",
      profileUpdated: "Profile updated",
      cardAdded: "Card added",
      cardUpdated: "Card updated",
      cardDeleted: "Card deleted",
      invalidCredentials: "Invalid login credentials",
      emailExists: "User with this email already exists",
      passwordTooShort: "Password must be at least 8 characters",
      invalidName: "Invalid name. Use only letters, apostrophe, hyphen and spaces (2-50 characters)",
      passwordsDontMatch: "Passwords don't match",
      fillAllFields: "Please fill all fields",
      networkError: "Network error",
      serverError: "Server error",
      cameraNotSupported: "Camera not supported",
      invalidCode: "Invalid code",
      confirmDelete: "Are you sure you want to delete this card?",
      offlineMode: "Offline mode"
    },
    
    // Time formats
    time: {
      now: "now",
      minuteAgo: "a minute ago",
      minutesAgo: "minutes ago",
      hourAgo: "an hour ago",
      hoursAgo: "hours ago",
      dayAgo: "a day ago",
      daysAgo: "days ago",
      monthAgo: "a month ago",
      monthsAgo: "months ago",
      yearAgo: "a year ago",
      yearsAgo: "years ago"
    }
  }
};

// i18n utility functions
class I18n {
  constructor() {
    this.translations = translations;
    this.currentLanguage = this.detectLanguage();
    this.init();
  }

  init() {
    // Listen for language changes
    document.addEventListener('languageChanged', (e) => {
      this.currentLanguage = e.detail.language;
      this.updatePageTexts();
    });
  }

  detectLanguage() {
    // Check localStorage first
    const savedLanguage = localStorage.getItem('language');
    if (savedLanguage && this.translations[savedLanguage]) {
      return savedLanguage;
    }

    // Check browser language
    const browserLanguage = navigator.language.split('-')[0];
    if (this.translations[browserLanguage]) {
      return browserLanguage;
    }

    // Default to Ukrainian
    return 'uk';
  }

  setLanguage(language) {
    if (!this.translations[language]) {
      return false;
    }

    this.currentLanguage = language;
    localStorage.setItem('language', language);
    
    // Update HTML lang attribute
    document.documentElement.lang = language;
    
    // Update page texts immediately
    this.updatePageTexts();
    
    // Dispatch language change event
    document.dispatchEvent(new CustomEvent('languageChanged', {
      detail: { language }
    }));

    return true;
  }

  getCurrentLanguage() {
    return this.currentLanguage;
  }

  t(key, params = {}) {
    const keys = key.split('.');
    let value = this.translations[this.currentLanguage];
    
    // Navigate through nested keys
    for (const k of keys) {
      if (value && typeof value === 'object' && k in value) {
        value = value[k];
      } else {
        // Fallback to default language
        value = this.translations['uk'];
        for (const k of keys) {
          if (value && typeof value === 'object' && k in value) {
            value = value[k];
          } else {
            return key;
          }
        }
        break;
      }
    }

    if (typeof value !== 'string') {
      return key;
    }

    // Replace parameters
    return value.replace(/\{\{(\w+)\}\}/g, (match, param) => {
      return params[param] || match;
    });
  }

  updatePageTexts() {
    // Update all elements with data-i18n attribute
    const elements = document.querySelectorAll('[data-i18n]');
    
    elements.forEach(element => {
      const key = element.getAttribute('data-i18n');
      const translation = this.t(key);
      
      if (element.tagName === 'INPUT' && element.type !== 'button') {
        element.placeholder = translation;
      } else {
        // Check if translation contains HTML tags
        if (translation.includes('<img') || translation.includes('<')) {
          element.innerHTML = translation;
        } else {
          element.textContent = translation;
        }
      }
    });

    // Update placeholder attributes
    document.querySelectorAll('[data-i18n-placeholder]').forEach(element => {
      const key = element.getAttribute('data-i18n-placeholder');
      element.placeholder = this.t(key);
    });

    // Update title attributes
    document.querySelectorAll('[data-i18n-title]').forEach(element => {
      const key = element.getAttribute('data-i18n-title');
      element.title = this.t(key);
    });

    // Update page title
    const titleElement = document.querySelector('title[data-i18n]');
    if (titleElement) {
      const key = titleElement.getAttribute('data-i18n');
      document.title = this.t(key);
    }
  }

  formatTime(date) {
    const now = new Date();
    const diff = now - new Date(date);
    const seconds = Math.floor(diff / 1000);
    const minutes = Math.floor(seconds / 60);
    const hours = Math.floor(minutes / 60);
    const days = Math.floor(hours / 24);
    const months = Math.floor(days / 30);
    const years = Math.floor(days / 365);

    if (seconds < 60) {
      return this.t('time.now');
    } else if (minutes < 2) {
      return this.t('time.minuteAgo');
    } else if (minutes < 60) {
      return `${minutes} ${this.t('time.minutesAgo')}`;
    } else if (hours < 2) {
      return this.t('time.hourAgo');
    } else if (hours < 24) {
      return `${hours} ${this.t('time.hoursAgo')}`;
    } else if (days < 2) {
      return this.t('time.dayAgo');
    } else if (days < 30) {
      return `${days} ${this.t('time.daysAgo')}`;
    } else if (months < 2) {
      return this.t('time.monthAgo');
    } else if (months < 12) {
      return `${months} ${this.t('time.monthsAgo')}`;
    } else if (years < 2) {
      return this.t('time.yearAgo');
    } else {
      return `${years} ${this.t('time.yearsAgo')}`;
    }
  }

  formatDate(date) {
    const d = new Date(date);
    const options = {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    };
    
    return d.toLocaleDateString(this.currentLanguage === 'uk' ? 'uk-UA' : 'en-US', options);
  }

  pluralize(count, singular, few, many) {
    if (this.currentLanguage === 'uk') {
      if (count % 10 === 1 && count % 100 !== 11) {
        return singular;
      } else if ([2, 3, 4].includes(count % 10) && ![12, 13, 14].includes(count % 100)) {
        return few;
      } else {
        return many;
      }
    } else {
      return count === 1 ? singular : few;
    }
  }
}

// Initialize when ready
function initializeI18n() {
  try {
    // Create global instance
    window.i18n = new I18n();
    
    // Global shortcut function
    window.t = (key, params) => window.i18n.t(key, params);
    
    // Update texts
    window.i18n.updatePageTexts();
  } catch (error) {
    console.error('Failed to initialize i18n:', error);
    
    // Create fallback functions
    window.t = (key) => key;
    window.i18n = {
      setLanguage: () => true,
      getCurrentLanguage: () => 'uk',
      updatePageTexts: () => {},
      t: (key) => key,
      formatDate: (date) => new Date(date).toLocaleDateString(),
      formatTime: (date) => new Date(date).toLocaleString()
    };
  }
}

// Initialize when DOM is ready
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', initializeI18n);
} else {
  initializeI18n();
}