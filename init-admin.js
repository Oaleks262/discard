// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–µ—Ä—à–æ–≥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
// –ó–∞–ø—É—Å—Ç—ñ—Ç—å: node init-admin.js

require('dotenv').config();
const mongoose = require('mongoose');
const readline = require('readline');
const Admin = require('./server/models/Admin');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function question(query) {
  return new Promise(resolve => rl.question(query, resolve));
}

async function createAdmin() {
  try {
    // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/loyalty-cards', {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });

    console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MongoDB');

    // –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ —î –≤–∂–µ –∞–¥–º—ñ–Ω–∏
    const existingAdmins = await Admin.countDocuments();
    if (existingAdmins > 0) {
      console.log(`\n‚ö†Ô∏è  –í–∂–µ —ñ—Å–Ω—É—î ${existingAdmins} –∞–¥–º—ñ–Ω(—ñ–≤) —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö.`);
      const proceed = await question('–°—Ç–≤–æ—Ä–∏—Ç–∏ —â–µ –æ–¥–Ω–æ–≥–æ –∞–¥–º—ñ–Ω–∞? (y/n): ');
      if (proceed.toLowerCase() !== 'y') {
        console.log('–°–∫–∞—Å–æ–≤–∞–Ω–æ.');
        process.exit(0);
      }
    }

    console.log('\nüìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n');

    const name = await question('–Ü–º\'—è –∞–¥–º—ñ–Ω–∞: ');
    const email = await question('Email: ');
    const password = await question('–ü–∞—Ä–æ–ª—å (–º—ñ–Ω. 6 —Å–∏–º–≤–æ–ª—ñ–≤): ');

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ email –≤–∂–µ —ñ—Å–Ω—É—î
    const existing = await Admin.findOne({ email: email.toLowerCase() });
    if (existing) {
      console.log('\n‚ùå –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –∑ —Ç–∞–∫–∏–º email –≤–∂–µ —ñ—Å–Ω—É—î!');
      process.exit(1);
    }

    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω–∞
    const admin = await Admin.create({
      name,
      email: email.toLowerCase(),
      password,
      role: 'superadmin'
    });

    console.log('\n‚úÖ –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!');
    console.log('\n–î–∞–Ω—ñ –¥–ª—è –≤—Ö–æ–¥—É:');
    console.log(`Email: ${admin.email}`);
    console.log(`–ü–∞—Ä–æ–ª—å: ${password}`);
    console.log('\n–£–≤—ñ–π–¥—ñ—Ç—å –Ω–∞: http://localhost:${process.env.PORT || 2804}/admin/login.html');

  } catch (error) {
    console.error('\n‚ùå –ü–æ–º–∏–ª–∫–∞:', error.message);
  } finally {
    rl.close();
    process.exit(0);
  }
}

createAdmin();
